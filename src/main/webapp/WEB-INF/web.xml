<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" 
version="3.1">

  <display-name>client1</display-name>
 
<context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/resources/applicationContext.xml</param-value>
  </context-param>
  
  <!-- 解决同一个web容器加载多个log4j异常问题-->
    <context-param>
   <param-name>webAppRootKey</param-name>
   <param-value>client1.root</param-value>
</context-param>
  <!-- 解决spring内部加载报 NameNotFoundException 问题 start-->
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>dev</param-value>
	</context-param>
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>dev</param-value>
	</context-param>
	<context-param>
		<param-name>spring.liveBeansView.mbeanDomain</param-name>
		<param-value>dev</param-value>
	</context-param>
  <!-- 解决spring内部加载报 NameNotFoundException 问题 end -->
  
  
  <servlet>
    <servlet-name>spring-webmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
    <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/resources/spring-webmvc-servlet.xml</param-value>
    </init-param>
  </servlet>
  
   
 <!--  soap 配置 ,由于v6 servlet 不支持 3.0 所以,暂时使用web配置方式 -->
 <servlet>
 	<servlet-name>soap</servlet-name>
 	<servlet-class>org.yaukie.servlet.PublishSoapServiceServlet</servlet-class>
 	<load-on-startup>1</load-on-startup>
 </servlet>


  <servlet-mapping>
    <servlet-name>spring-webmvc</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>
  
  
   <!-- 处理所有的rest类型的ws请求 -->
 <servlet-mapping>
 	<servlet-name>soap</servlet-name>
 	<url-pattern>/soap/*</url-pattern>
 </servlet-mapping>
  
  <!-- 防止tomcat内存溢出的监听 -->
   <listener>
    <listener-class>se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventorListener</listener-class>
</listener>

  <!-- ContextLoaderListener makes sure delegating filters can read the application context -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

 <!-- 加载log4j的配置文件log4j.properties -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>

 <!-- 加载Spring框架中的log4j监听器Log4jConfigListener -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- 设定刷新日志配置文件的时间间隔，这里设置为10s -->
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>10000</param-value>
    </context-param>

<!--   <filter> -->
<!--     <filter-name>localTracingFilter</filter-name> -->
<!--     <filter-class>brave.spring.webmvc.DelegatingTracingFilter</filter-class> -->
<!--   </filter> -->
<!--   <filter-mapping> -->

<!--     <filter-name>localTracingFilter</filter-name> -->

<!--     <url-pattern>/*</url-pattern> -->
<!--   </filter-mapping> -->
  
</web-app>